package com.lc.dao;

import com.lc.pojo.Cart;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Cart record);

    /*
     * 根据商品id和用户id来查询商品
     * */
    Cart selectByUidAndPid(@Param("productId") Integer productId,
                           @Param("userId") Integer userId);

    /*
     * 根据用户id查询商品信息List<cart>
     * */
    List<Cart> selectByUserId(Integer userId);

    /*
     * 判断购物车是否全选  看checked为0的有几个
     * */
    int isAllCheck(Integer userId);

    /*
     * 移除购物车某个产品
     * */
    int updateByUidAndPid(@Param("userId") Integer userId,
                          @Param("list") List<Integer> list);

    /*
     * 购物车选中各种操作
     * 给出商品id则更改该商品的选中check
     * 未给出商品id则为全选，取消全选
     * */
    int selectOrNoselect(@Param("userId") Integer userId,
                         @Param("productId") Integer productId,
                         @Param("check") Integer check);

    /*
     * 查询在购物车里的产品数量
     * */
    int selectSumProduct(Integer userId);

    /*
     * 根据userid和checked来查询购物车中选中的商品
     * */
    List<Cart> findCartByUidAndChecked(Integer userId);

    /*
     * 批量删除
     * */
    int deleteBatch(List<Cart> cartList);
}